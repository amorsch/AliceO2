digraph "o2::soa::CombinationsBlockFullIndexPolicy&lt; Ts &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{o2::soa::CombinationsBlock\lFullIndexPolicy\< Ts \>\n||+ CombinationsBlockFullIndex\lPolicy()\l+ setRanges()\l+ moveToEnd()\l+ addOne()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{o2::soa::CombinationsIndex\lPolicyBase\< Ts... \>\n||+ CombinationsIndexPolicyBase()\l+ moveToEnd()\l+ addOne()\l}",height=0.2,width=0.4,color="black",URL="$de/dac/structo2_1_1soa_1_1CombinationsIndexPolicyBase.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +mMaxOffset" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{o2::soa::generate_tuple\l_type\< uint64_t, sizeof...(Ts)\>\n||}",height=0.2,width=0.4,color="black",URL="$d7/d86/structo2_1_1soa_1_1generate__tuple__type.html"];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="solid",label=" \< uint64_t, sizeof...(Ts)\>" ,fontname="Helvetica"];
  Node6 [label="{o2::soa::generate_tuple\l_type\< T, N, REST \>\n||}",height=0.2,width=0.4,color="black",URL="$d7/d86/structo2_1_1soa_1_1generate__tuple__type.html"];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +mCurrent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{tuple\< typename Ts\l::iterator... \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +mIsEnd" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{bool\n||}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< Ts... \>" ,fontname="Helvetica"];
  Node9 [label="{o2::soa::CombinationsIndex\lPolicyBase\< Ts \>\n||+ CombinationsIndexPolicyBase()\l+ moveToEnd()\l+ addOne()\l}",height=0.2,width=0.4,color="black",URL="$de/dac/structo2_1_1soa_1_1CombinationsIndexPolicyBase.html"];
  Node5 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +mMaxOffset" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +mCurrent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +mIsEnd" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +mCurrentIndices\n+mBeginIndices" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +mGroupedIndices" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{array\< std::vector\l\< std::pair\< uint64\l_t, uint64_t \> \>, sizeof...(Ts)\>\n||}",height=0.2,width=0.4,color="grey75"];
}
